# coding: utf-8
{{>partial_header}}

from {{packageName}}.client.models.tuple import ClientTuple

from typing import List, Any

class ClientListObjectsRequest():
    """
    ClientListObjectsRequest encapsulates the parameters required for list objects
    """

    def __init__(self, user: str, relation: str, type: str, context: Any = None, contextual_tuples: List[ClientTuple]=None):
        self._user = user
        self._relation = relation
        self._type = type
        self._context = context
        self._contextual_tuples = contextual_tuples

    @property
    def user(self):
        """
        Return user
        """
        return self._user

    @property
    def relation(self):
        """
        Return relation
        """
        return self._relation

    @property
    def type(self):
        """
        Return type
        """
        return self._type

    @property
    def context(self):
        """
        Return context
        """
        return self._context

    @property
    def contextual_tuples(self):
        """
        Return contextual_tuples
        """
        return self._contextual_tuples

    @user.setter
    def user(self, value):
        """
        Set user
        """
        self._user = value

    @relation.setter
    def relation(self, value):
        """
        Set relation
        """
        self._relation = value

    @type.setter
    def type(self, value):
        """
        Set type
        """
        self._type = value

    @context.setter
    def context(self, value):
        """
        Set context
        """
        self._context = value

    @contextual_tuples.setter
    def contextual_tuples(self, value):
        """
        Set contextual tuples
        """
        self._contextual_tuples = value
