{{>licenseInfo}}
package {{configPackage}};

import static {{utilPackage}}.StringUtil.isNullOrWhitespace;

import {{errorsPackage}}.FgaInvalidParameterException;

public class ClientWriteAssertionsOptions {
    private String authorizationModelId;

    public boolean hasValidAuthorizationModelId() throws FgaInvalidParameterException {
        return !isNullOrWhitespace(authorizationModelId);
    }

    public void assertValidAuthorizationModelId() throws FgaInvalidParameterException {
        if (!hasValidAuthorizationModelId()) {
            throw new FgaInvalidParameterException("authorizationModelId", "ClientConfiguration");
        }
    }

    public ClientWriteAssertionsOptions authorizationModelId(String authorizationModelId) {
        this.authorizationModelId = authorizationModelId;
        return this;
    }

    public String getAuthorizationModelId() {
        return authorizationModelId;
    }

    public String getAuthorizationModelIdChecked() throws FgaInvalidParameterException {
        assertValidAuthorizationModelId();
        return authorizationModelId;
    }
}
