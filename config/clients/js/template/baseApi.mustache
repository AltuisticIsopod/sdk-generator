/* tslint:disable */
/* eslint-disable */
{{>partial_header}}

// Some imports not used depending on template conditions
// @ts-ignore
import globalAxios, { AxiosPromise, AxiosStatic } from 'axios';

import { Configuration, UserConfigurationParams } from "./configuration";

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};

/**
 *
 * @export
 * @interface RequestArgs
 */
export interface RequestArgs {
    url: string;
    options: any;
}

/**
 *
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
    protected configuration: Configuration;

    constructor(configuration: UserConfigurationParams | Configuration, protected axios: AxiosStatic = globalAxios) {
        if (configuration instanceof Configuration) {
            this.configuration = configuration;
        } else {
            this.configuration = new Configuration(configuration, axios);
        }
        this.configuration.isValid();
    }
}
