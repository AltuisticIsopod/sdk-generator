#### Stores

##### List Stores

Get a paginated list of stores.

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/ListStores)

```csharp
var options = new ClientListStoresOptions {
    PageSize = 10,
    ContinuationToken = "...",
};
var response = await fgaClient.ListStores(options);

// stores = [{ "id": "01FQH7V8BEG3GPQW93KTRFR8JB", "name": "FGA Demo Store", "created_at": "2022-01-01T00:00:00.000Z", "updated_at": "2022-01-01T00:00:00.000Z" }]
```

##### Create Store

Initialize a store.

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/CreateStore)

```csharp
var store = await fgaClient.CreateStore(new CreateStoreRequest(){Name = "FGA Demo"})

// store.Id = "01FQH7V8BEG3GPQW93KTRFR8JB"

// store store.Id in database

// update the storeId of the current instance
fgaClient.StoreId = storeId;

// continue calling the API normally
```

##### Get Store

Get information about the current store.

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/GetStore)

> Requires a client initialized with a storeId

```csharp
var store = await fgaClient.GetStore();

// store = { "id": "01FQH7V8BEG3GPQW93KTRFR8JB", "name": "FGA Demo Store", "created_at": "2022-01-01T00:00:00.000Z", "updated_at": "2022-01-01T00:00:00.000Z" }
```

##### Delete Store

Delete a store.

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/DeleteStore)

> Requires a client initialized with a storeId

```csharp
var store = await fgaClient.DeleteStore();
```

#### Authorization Models

##### Read Authorization Models

Read all versions of the authorization model.

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/ReadAuthorizationModels)

```csharp
var options = new ClientReadAuthorizationModelsOptions {
    PageSize = 10,
    ContinuationToken = "...",
};
var response = await fgaClient.ReadAuthorizationModels(options);

// response.AuthorizationModels = [
// { id: "1uHxCSuTP0VKPYSnkq1pbb1jeZw", type_definitions: [...] },
// { id: "GtQpMohWezFmIbyXxVEocOCxxgq", type_definitions: [...] }];
```

##### Write Authorization Model

Create a new version of the authorization model.

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/WriteAuthorizationModel)

> Note: To learn how to build your authorization model, check the Docs at {{docsUrl}}.

> Learn more about [the {{appTitleCaseName}} configuration language]({{docsUrl}}/configuration-language).

> You can use the [OpenFGA Syntax Transformer](https://github.com/openfga/syntax-transformer) to convert between the friendly DSL and the JSON authorization model.

```csharp
var documentRelations = new Dictionary<string, Userset>()
{
    {"writer", new Userset(_this: new object())},
    {
        "viewer",
        new Userset(union: new Usersets(new List<Userset>()
            {new(new object(), new ObjectRelation("", "writer"))}))
    }
};
var userRelations = new Dictionary<string, Userset>()
{
};

var body = new WriteAuthorizationModelRequest(new List<TypeDefinition>() {new("document", documentRelations), new("user", userRelations)});
var response = await fgaClient.WriteAuthorizationModel(body);

// response.AuthorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw"
```

#### Read a Single Authorization Model

Read a particular version of the Authorization Model.

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/ReadAuthorizationModel)

```csharp
var options = new ClientReadAuthorizationModelOptions {
    // You can rely on the model id set in the configuration or override it for this specific request
    AuthorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw",
};

var response = await fgaClient.ReadAuthorizationModel(options);

// response.AuthorizationModel.Id = "1uHxCSuTP0VKPYSnkq1pbb1jeZw"
// response.AuthorizationModel.TypeDefinitions = [{ "type": "document", "relations": { ... } }, { "type": "user", "relations": { ... }}]
```

##### Read the Latest Authorization Model

Reads the latest authorization model versions (note: this ignores the model id in configuration).

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/ReadAuthorizationModel)

```csharp
var response = await fgaClient.ReadLatestAuthorizationModel();

// response.AuthorizationModel.Id = "1uHxCSuTP0VKPYSnkq1pbb1jeZw"
// response.AuthorizationModel.TypeDefinitions = [{ "type": "document", "relations": { ... } }, { "type": "user", "relations": { ... }}]
```

#### Relationship Tuples

##### Read Relationship Tuple Changes (Watch)

Reads the list of historical relationship tuple writes and deletes.

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/ReadChanges)

```csharp
var body = new ClientReadChangesRequest { Type = "document" };
var options = new ClientReadChangesOptions {
    PageSize = 10,
    ContinuationToken = "...",
};

var response = await fgaClient.ReadChanges(body, options);

// response.TontinuationToken = ...
// response.Changes = [
//   { TupleKey: { User, Relation, Object }, Operation: TupleOperation.WRITE, Timestamp: ... },
//   { TupleKey: { User, Relation, Object }, Operation: TupleOperation.DELETE, Timestamp: ... }
// ]
```

##### Read Relationship Tuples

Reads the relationship tuple stored in the database (does not evaluate according to the model).

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Read)

```csharp
// Find if a relationship tuple stating that a certain user is a viewer of a certain document
var body = new ClientReadRequest() {
    User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    Relation = "viewer",
    Object = "document:roadmap",
};

// Find all relationship tuples where a certain user has a relationship as any relation to a certain document
var body = new ClientReadRequest() {
    User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    Object = "document:roadmap",
};

// Find all relationship tuples where a certain user is a viewer of any document
var body = new ClientReadRequest() {
    User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    Relation = "viewer",
    Object = "document:",
};

// Find all relationship tuples where any user has a relationship as any relation with a particular document

var body = new ClientReadRequest() {
    Object = "document:roadmap",
};

// Read all stored relationship tuples
var body = new ClientReadRequest();

var options = new ClientReadOptions {
    PageSize = 10,
    ContinuationToken = "...",
};

var response = await fgaClient.Read(body, options);

// In all the above situations, the response will be of the form:
// response = { Tuples: [{ Key: { User, Relation, Object }, Timestamp }, ...]}
```

##### Write (Create and Delete) Relationship Tuples


[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Write)

Create and/or delete relationship tuples to update the system state.

```csharp
var body = new ClientWriteRequest() {
    Writes = new List<ClientTupleKey> {
        new("document:roadmap", "viewer", "user:81684243-9356-4421-8fbf-a4f8d36aa31b")
    },
    Writes = new List<ClientTupleKey> {
        new("document:roadmap", "viewer", "user:81684243-9356-4421-8fbf-a4f8d36aa31b")
    },
};
var options = new ClientWriteOptions {
    // You can rely on the model id set in the configuration or override it for this specific request
    AuthorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw",
};
var response = await fgaClient.Write(body, options);

var body = new WriteRequest{Writes = new TupleKeys(new List<TupleKey>
    {new("document:roadmap", "viewer", "user:81684243-9356-4421-8fbf-a4f8d36aa31b")}), AuthorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw"};
var response = await fgaClient.Write(body);
```

#### Delete Tuples

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Write)

```csharp
var body = new WriteRequest{Deletes = new TupleKeys(new List<TupleKey>
    {new("document:roadmap", "viewer", "user:81684243-9356-4421-8fbf-a4f8d36aa31b")}), AuthorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw"};
var response = await fgaClient.Write(body);
```
TODO
###### Transaction mode (default)

By default, write runs in a transaction mode where any invalid operation (deleting a non-exiting tuple, creating an existing tuple, one of the tuples was invalid) or a server error will fail the entire operation.


###### Non-transaction mode

The SDK will split the writes into separate requests and send them sequentially to avoid violating rate limits.

#### Relationship Queries

##### Check

Check if a user has a particular relation with an object.

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/Check)

```csharp
var options = new ClientCheckOptions {
    // You can rely on the model id set in the configuration or override it for this specific request
    AuthorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw",
};
var body =
    new CheckRequest{tupleKey: new ClientTupleKey("document:roadmap", "viewer", "user:81684243-9356-4421-8fbf-a4f8d36aa31b"), AuthorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw"};
var response = await fgaClient.Check(body, options);
// response.Allowed = true
```

##### Batch Check

Run a set of [checks](#check). Batch Check will return `allowed: false` if it encounters an error, and will return the error in the body.
If 429s or 5xxs are encountered, the underlying check will retry up to {{defaultMaxRetry}} times before giving up.

```csharp
var options = new ClientCheckOptions {
    // You can rely on the model id set in the configuration or override it for this specific request
    AuthorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw",
};
var body = new List<ClientCheckRequest>(){
    new() {
        User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
        Relation = "viewer",
        Object = "document:roadmap",
        ContextualTuples = new List<ClientTupleKey>() {
            new() {
                User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
                Relation = "editor",
                Object = "document:roadmap",
            }
        },
    },
    new() {
        User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
        Relation = "admin",
        Object = "document:roadmap",
        ContextualTuples = new List<ClientTupleKey>() {
            new() {
                User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
                Relation = "editor",
                Object = "document:roadmap",
            }
        },
    },
    new() {
        User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
        Relation = "creator",
        Object = "document:roadmap",
    },
    new() {
        User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
        Relation = "deleter",
        Object = "document:roadmap",
    }
};

const response = await fgaClient.batchCheck(body, options);

/*
response.Responses = [{
  Allowed: false,
  Request: {
    User: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    Relation: "viewer",
    Object: "document:roadmap",
    ContextualTuples: [{
      User: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
      Relation: "editor",
      Object: "document:roadmap"
    }]
  }
}, {
  Allowed: false,
  Request: {
    User: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    Relation: "admin",
    Object: "document:roadmap",
    ContextualTuples: [{
      User: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
      Relation: "editor",
      Object: "document:roadmap"
    }]
  }
}, {
  Allowed: false,
  Request: {
    User: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    Relation: "creator",
    Object: "document:roadmap",
  },
  Error: <FgaError ...>
}, {
  Allowed: true,
  Request: {
    User: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    Relation: "deleter",
    Object: "document:roadmap",
  }},
]
*/
```

##### Expand

Expands the relationships in userset tree format.

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/Expand)

```csharp
var options = new ClientCheckOptions {
    // You can rely on the model id set in the configuration or override it for this specific request
    AuthorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw",
};
var body = new ClientExpandRequest {
    Relation = "viewer",
    Object = "document:roadmap",
};
var response = await fgaClient.Expand(body, options);

// response.Tree.Root = {"name":"document:roadmap#viewer","leaf":{"users":{"users":["user:81684243-9356-4421-8fbf-a4f8d36aa31b","user:f52a4f7a-054d-47ff-bb6e-3ac81269988f"]}}}
```

#### List Objects

List the objects of a particular type a user has access to.

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/ListObjects)

```csharp
var body = new ListObjectsRequest{
    AuthorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw",
    User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    Relation = "viewer",
    Type = "document",
    ContextualTuples = new ContextualTupleKeys() {
        TupleKeys = new List<TupleKey> {
            new("document:budget", "writer", "user:81684243-9356-4421-8fbf-a4f8d36aa31b")
        }
    }
};
var response = await fgaClient.ListObjects(body);

// response.Objects = ["document:roadmap"]
```

#### List Relations

List the relations a user has on an object.

```csharp
ListRelationsRequest body =
    new ListRelationsRequest() {
        User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
        Object = "document:roadmap",
        Relations = new List<string> {"can_view", "can_edit", "can_delete", "can_rename"},
        ContextualTuples = new List<ClientTupleKey>() {
            new ClientTupleKey {
                User = "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
                Relation = "editor",
                Object = "document:roadmap",
            }
        }
    };
var response = await fgaClient.ListRelations(body);

// response.Relations = ["can_view", "can_edit"]
```
